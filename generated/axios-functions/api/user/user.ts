/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * Swagger Petstore - OpenAPI 3.0
 * This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about
Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
You can now help us improve the API whether it's by making changes to the definition itself or to the code.
That way, with time, we can improve the API in general, and expose some of the new features in OAS3.

Some useful links:
- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
- [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
 * OpenAPI spec version: 1.0.27-SNAPSHOT
 */
import axios from 'axios';
import type {
  AxiosRequestConfig,
  AxiosResponse
} from 'axios';

import type {
  LoginUserParams,
  User
} from '../swaggerPetstoreOpenAPI30.schemas';




  /**
 * This can only be done by the logged in user.
 * @summary Create user.
 */
export const createUser = <TData = AxiosResponse<User>>(
    user: User, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `https://petstore3.swagger.io/api/v3/user`,
      user,options
    );
  }
/**
 * Creates list of users with given input array.
 * @summary Creates list of users with given input array.
 */
export const createUsersWithListInput = <TData = AxiosResponse<User>>(
    user: User[], options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `https://petstore3.swagger.io/api/v3/user/createWithList`,
      user,options
    );
  }
/**
 * Log into the system.
 * @summary Logs user into the system.
 */
export const loginUser = <TData = AxiosResponse<string>>(
    params?: LoginUserParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `https://petstore3.swagger.io/api/v3/user/login`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }
/**
 * Log user out of the system.
 * @summary Logs out current logged in user session.
 */
export const logoutUser = <TData = AxiosResponse<void>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `https://petstore3.swagger.io/api/v3/user/logout`,options
    );
  }
/**
 * Get user detail based on username.
 * @summary Get user by user name.
 */
export const getUserByName = <TData = AxiosResponse<User>>(
    username: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `https://petstore3.swagger.io/api/v3/user/${username}`,options
    );
  }
/**
 * This can only be done by the logged in user.
 * @summary Update user resource.
 */
export const updateUser = <TData = AxiosResponse<void>>(
    username: string,
    user: User, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.put(
      `https://petstore3.swagger.io/api/v3/user/${username}`,
      user,options
    );
  }
/**
 * This can only be done by the logged in user.
 * @summary Delete user resource.
 */
export const deleteUser = <TData = AxiosResponse<void>>(
    username: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.delete(
      `https://petstore3.swagger.io/api/v3/user/${username}`,options
    );
  }
export type CreateUserResult = AxiosResponse<User>
export type CreateUsersWithListInputResult = AxiosResponse<User>
export type LoginUserResult = AxiosResponse<string>
export type LogoutUserResult = AxiosResponse<void>
export type GetUserByNameResult = AxiosResponse<User>
export type UpdateUserResult = AxiosResponse<void>
export type DeleteUserResult = AxiosResponse<void>
